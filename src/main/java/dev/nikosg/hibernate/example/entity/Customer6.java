package dev.nikosg.hibernate.example.entity;

import org.hibernate.annotations.SortComparator;

import javax.persistence.*;
import java.util.Comparator;
import java.util.SortedMap;
import java.util.TreeMap;

//Mapping the Collection: SortedMap

// create table IMAGE6 (
// CUSTOMERID bigint not null,
// IMAGEDESCR varchar(255),
// FILENAME varchar(255) not null,
// primary key (CUSTOMERID, FILENAME)
// )

// create table CUSTOMER6 (
// id bigint generated by default as identity,
// EMAIL varchar(255),
// FIRSTNAME varchar(255),
// LASTNAME varchar(255),
// primary key (id)
// )

// Alter table IMAGE6
//  add constraint FKklahf5j3llm7ulsp23kuqra61 foreign key (CUSTOMERID) references CUSTOMER6

@Entity
@Table(name="CUSTOMER6")
public class Customer6 {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;

    @Column(name = "FIRSTNAME")
    private String firstName;

    @Column(name = "LASTNAME")
    private String lastName;

    @Column(name = "EMAIL")
    private String email;

    @ElementCollection //this tells Hibernate that we are mapping a collection
    @CollectionTable(
            name = "IMAGE6", //this is the table name
            joinColumns = @JoinColumn(name = "CUSTOMERID"))
    @MapKeyColumn(name = "FILENAME") //this is the key of the Map
    @Column(name = "IMAGEDESCR") //this is the value of the Map
    //@OrderBy //defaults to sort by Map key
    @SortComparator(ReverseStringComparator.class) //this is for sorting in java memory instead of DB
    private SortedMap<String, String> images = new TreeMap<>();


    //Reverse String
    public static class ReverseStringComparator implements Comparator<String> {
        @Override
        public int compare(String o1, String o2) {
            return o2.compareTo(o1);
        }
    }

    //hibernate requires a no-arg constructor in order to retrieve data
    public Customer6(){

    }

    public Customer6(String firstName, String lastName, String email) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
    }

    public String getFirstName() {
        return firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public String getEmail() {
        return email;
    }

    public SortedMap<String, String> getImages() {
        return images;
    }

    @Override
    public String toString() {
        return "Student {" +
                "id=" + id +
                ", firstName='" + firstName + '\'' +
                ", lastName='" + lastName + '\'' +
                ", email='" + email + '\'' +
                '}';
    }

}
